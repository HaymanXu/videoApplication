AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: VideoApi to CURD videos from S3 via Lambda, and TranscoderFunction to
  transcoder video; DatabaseApi to CURD DynamoDB video table
Parameters:
  ExistingInputBucketName:
    Type: String
    Description: The name of the existing S3 bucket to store input video.
  ExistingOutputBucketName:
    Type: String
    Description: The name of the existing S3 bucket to store output video.
  ExistingTranscoderPipelineId:
    Type: String
    Description: The ID of the existing Elastic Transcoder pipeline.
Resources:
  UploadVideoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: UploadVideoApi
      StageName: dev
      BinaryMediaTypes:
      - video~1mp4
      - application~1octet-stream
  UploadVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      Handler: LambdaCronFunctions.UploadVideoHandler
      Runtime: java17
      Description: Java function
      MemorySize: 2048
      Timeout: 10
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: ExistingInputBucketName
      Policies:
      - AWSLambdaBasicExecutionRole
      - AWSLambda_ReadOnlyAccess
      - AWSXrayWriteOnlyAccess
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Effect: Allow
          Action:
          - s3:PutObject
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
          - Fn::Sub: arn:aws:s3:::${ExistingInputBucketName}/*
          - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}:*
      Tracing: Active
      Events:
        PostVideoEvent:
          Type: Api
          Properties:
            Path: /v1/video/{bucketName}/{fileName}
            Method: POST
            RestApiId:
              Ref: UploadVideoApi
  TranscoderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: LambdaCronFunctions.TranscoderHandler
      Runtime: java17
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          PIPELINE_ID:
            Ref: ExistingTranscoderPipelineId
          OUTPUT_BUCKET:
            Ref: ExistingOutputBucketName
          INPUT_BUCKET:
            Ref: ExistingInputBucketName
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:GetObjectAcl
          Resource:
            Fn::Sub: arn:aws:s3:::${ExistingInputBucketName}/*
        - Effect: Allow
          Action:
          - s3:PutObject
          - s3:PutObjectAcl
          Resource:
            Fn::Sub: arn:aws:s3:::${ExistingOutputBucketName}/*
      - Statement:
        - Effect: Allow
          Action:
          - elastictranscoder:*
          Resource: '*'
  TranscoderFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - TranscoderFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::Sub: arn:aws:s3:::${ExistingInputBucketName}
  UploadVideoMetadataApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Name: UploadVideoMetadataApi
  UploadVideoMetadataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      Handler: LambdaCronFunctions.UploadVideoMetadataHandler
      Runtime: java17
      Description: Java function
      MemorySize: 2048
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: VideoTable
      Events:
        PostDatabaseApi:
          Type: Api
          Properties:
            Path: /v1/database/upload-video-metadata
            Method: POST
            RestApiId:
              Ref: UploadVideoMetadataApi
  StreamVideoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: StreamVideoApi
      StageName: dev
      BinaryMediaTypes:
      - video~1mp4
      - application~1octet-stream
  StreamVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      Handler: LambdaCronFunctions.StreamVideoHandler
      Runtime: java17
      Description: Java function
      MemorySize: 2048
      Timeout: 10
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: ExistingOutputBucketName
      Policies:
      - AWSLambdaBasicExecutionRole
      - AWSLambda_ReadOnlyAccess
      - AWSXrayWriteOnlyAccess
      - AWSLambdaVPCAccessExecutionRole
      - Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
          - Fn::Sub: arn:aws:s3:::${ExistingOutputBucketName}/*
          - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}:*
      Tracing: Active
      Events:
        PostVideoEvent:
          Type: Api
          Properties:
            Path: /v1/video/{bucketName}/{fileName}
            Method: GET
            RestApiId:
              Ref: StreamVideoApi
  SearchVideoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: SearchVideoApi
      StageName: dev
  SearchVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      Handler: LambdaCronFunctions.SearchVideoHandler
      Runtime: java17
      Description: Java function
      MemorySize: 2048
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: VideoTable
      Events:
        GetVideoMetadataEvent:
          Type: Api
          Properties:
            Path: /v1/database/search-video
            Method: GET
            RestApiId:
              Ref: SearchVideoApi
  CommentVideoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: CommentVideoApi
      StageName: dev
  CommentVideoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      Handler: LambdaCronFunctions.CommentVideoHandler
      Runtime: java17
      Description: Java function
      MemorySize: 2048
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: CommentsTable
      Events:
        PostDatabaseApi:
          Type: Api
          Properties:
            Path: /v1/database/comment-video
            Method: POST
            RestApiId:
              Ref: CommentVideoApi
  LikeApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: LikeApi
      StageName: dev
  LikeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      Handler: LambdaCronFunctions.LikeOrDislike.LikeHandler
      Runtime: java17
      Description: Java function
      MemorySize: 2048
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: VideoTable
      - DynamoDBCrudPolicy:
          TableName: LikeOrDislikeTable
      Events:
        PostDatabaseApi:
          Type: Api
          Properties:
            Path: /v1/database/like
            Method: POST
            RestApiId:
              Ref: LikeApi
  DislikeApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: DislikeApi
      StageName: dev
  DislikeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      Handler: LambdaCronFunctions.LikeOrDislike.DislikeHandler
      Runtime: java17
      Description: Java function
      MemorySize: 2048
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: VideoTable
      - DynamoDBCrudPolicy:
          TableName: LikeOrDislikeTable
      Events:
        PostDatabaseApi:
          Type: Api
          Properties:
            Path: /v1/database/dislike
            Method: POST
            RestApiId:
              Ref: DislikeApi
  RemoveLikeApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: RemoveLikeApi
      StageName: dev
  RemoveLikeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      Handler: LambdaCronFunctions.LikeOrDislike.RemoveLikeHandler
      Runtime: java17
      Description: Java function
      MemorySize: 2048
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: VideoTable
      - DynamoDBCrudPolicy:
          TableName: LikeOrDislikeTable
      Events:
        PostDatabaseApi:
          Type: Api
          Properties:
            Path: /v1/database/remove-like
            Method: POST
            RestApiId:
              Ref: RemoveLikeApi
  RemoveDislikeApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: RemoveDislikeApi
      StageName: dev
  RemoveDislikeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://lambda-artifacts-code-9791e0522dbf2551/9d425abffcb550d2d1c883a0a571bf69
      Handler: LambdaCronFunctions.LikeOrDislike.RemoveDislikeHandler
      Runtime: java17
      Description: Java function
      MemorySize: 2048
      Timeout: 10
      Policies:
      - DynamoDBCrudPolicy:
          TableName: VideoTable
      - DynamoDBCrudPolicy:
          TableName: LikeOrDislikeTable
      Events:
        PostDatabaseApi:
          Type: Api
          Properties:
            Path: /v1/database/remove-dislike
            Method: POST
            RestApiId:
              Ref: RemoveDislikeApi
